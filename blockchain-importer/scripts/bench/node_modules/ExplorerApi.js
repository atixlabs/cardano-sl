var fetch = require("node-fetch");

const ExplorerApi = {};

const parseResponse = function (response) {
  return response.json();
};

const handleErrors = function (responseJson) {
  if (responseJson.error) {
    console.error(`[ExplorerApi.handleErrors] error[${responseJson.error.name}]`);
    throw responseJson.error;
  } else {
    return Promise.resolve(responseJson);
  }
};

const getServerRoute = function (chain) {
  if (chain == 'mainnet') {
    return 'https://cardanoexplorer.com/api';
  } else if (chain == 'staging') {
    return 'https://explorer.iohkdev.io/api';
  } else {
    throw `Chain ${chain} not known. Select mainnet of staging`
  }
}

ExplorerApi.getTxTimestamp = async function (chain, txId) {
  const serverRoute = getServerRoute(chain);
  return fetch(`${serverRoute}/txs/summary/${txId}`, {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json;charset=utf-8',
    },
  })
  .then(parseResponse)
  .then(({Right: { ctsBlockTimeIssued } }) => {
    const timestampInMillis = ctsBlockTimeIssued * 1000
    return new Date(timestampInMillis)
  })
  .then(handleErrors);
};

module.exports = ExplorerApi;